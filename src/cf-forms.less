/* ==========================================================================
   Capital Framework
   Form Element Styling
   ========================================================================== */


/* topdoc
    name: Input validation styles
    family: cf-forms
    patterns:
    - name: Default state
      codenotes:
        - |
          Structural cheat sheet:
          -----------------------
          .form-field[data-state=""]
            .form-field_icon.form-field_icon__invalid
            .form-field_icon.form-field_icon__valid
            .form-field_input
      notes:
        - "Wrap an input with the .form-field class, add all validation icons needed
           and use the data-state attribute to toggle validation states."
      markup: |
        <div class="form-field" data-state="">
            <span class="form-field_icon form-field_icon__invalid cf-icon cf-icon-delete-round"
                  role="alert">
                <span class="u-visually-hidden">
                    Invalid
                </span>
            </span>
            <span class="form-field_icon form-field_icon__valid cf-icon cf-icon-approved-round"
                  role="alert">
                <span class="u-visually-hidden">
                    Valid
                </span>
            </span>
            <input class="form-field_input"
                   placeholder="placeholder text"
                   type="text"
                   value="Default input">
        </div>
    - name: Error state
      codenotes:
        - |
          .form-field[data-state="invalid"]
      notes:
        - "Simply set the data-state attribute to 'invalid' and the input will
           style appropriately and the .form-field_icon__invalid icon will become
           visible."
      markup: |
        <div class="form-field" data-state="invalid">
            <span class="form-field_icon form-field_icon__invalid cf-icon cf-icon-delete-round"
                  role="alert">
                <span class="u-visually-hidden">
                    Invalid
                </span>
            </span>
            <span class="form-field_icon form-field_icon__valid cf-icon cf-icon-approved-round"
                  role="alert">
                <span class="u-visually-hidden">
                    Valid
                </span>
            </span>
            <input class="form-field_input"
                   placeholder="placeholder text"
                   type="text"
                   value="Invalid input">
        </div>
    - name: Success state
      codenotes:
        - |
          .form-field[data-state="valid"]
      notes:
        - "Simply set the data-state attribute to 'valid' and the input will
           style appropriately and the .form-field_icon__valid icon will become
           visible."
      markup: |
        <div class="form-field" data-state="valid">
            <span class="form-field_icon form-field_icon__invalid cf-icon cf-icon-delete-round"
                  role="alert">
                <span class="u-visually-hidden">
                    Invalid
                </span>
            </span>
            <span class="form-field_icon form-field_icon__valid cf-icon cf-icon-approved-round"
                  role="alert">
                <span class="u-visually-hidden">
                    Valid
                </span>
            </span>
            <input class="form-field_input"
                   placeholder="placeholder text"
                   type="text"
                   value="Valid input">
        </div>
    tags:
    - cf-forms
*/

.form-field {
    @icon-font-size: 20px;

    display: inline-block;
    position: relative;
    padding-right: unit((@icon-font-size + 20px) / @base-font-size-px, em);

    &_input {
        width: 100%;
    }

    &_icon {
        display: none !important;
        position: absolute;
        top: unit(4px / @icon-font-size, em);
        right: 0;
        font-size: unit(@icon-font-size / @base-font-size-px, em);
    }
}

.form-field[data-state="valid"] {
    .form-field_input {
        border: 1px solid @green;
        outline: 1px solid @green;
    }
    .form-field_icon__valid {
        display: inline !important;
        color: @green;
    }
}

.form-field[data-state="invalid"] {
    .form-field_input {
        border: 1px solid @redorange;
        outline: 1px solid @redorange;
    }
    .form-field_icon__invalid {
        display: inline !important;
        color: @redorange;
    }
}

.is-invalid {
    &,
    input[type="text"]&,
    input[type="search"]&,
    input[type="email"]&,
    input[type="url"]&,
    input[type="tel"]&,
    input[type="number"]& {
        border: 1px solid @redorange;
        outline: 1px solid @redorange;
    }
}

.input__success {
    border: 1px solid @green;
    outline: 1px solid @green;
}


/* topdoc
    name: Single-line search input
    family: cf-forms
    patterns:
    - name: Default single-line search input
      markup: |
        <input placeholder="placeholder search text" type="search" value="">
    - name: Focused state
      markup: |
        <input class="focus" placeholder="placeholder search text" type="search" value="">
    - name: Error state
      notes:
        - Please review the notes on form input error icons in the form icons section below.
      markup: |
        <input class="is-invalid" placeholder="placeholder search text" type="search" value="Invalid input">
        <span class="cf-form_input-icon cf-icon cf-icon-delete-round" role="alert"></span>
    - name: Success state
      notes:
        - Please review the notes on form input success icons in the form icons section below.
      markup: |
        <input class="success" placeholder="placeholder search text" type="search" value="Validated input">
        <span class="cf-form_input-icon cf-icon cf-icon-approved-round"></span>
    tags:
    - cf-forms
*/

/* NOTE: all input[type="search"] styles extend input[type="text"]. */

input[type="search"] {
    &:extend(input[type="text"]);
}

input[type="search"]:focus,
input[type="search"].focus {
    // Class included for static state examples
    &:extend(input[type="text"]:focus);
}

input[type="search"].error {
    &:extend(input[type="text"].error);
}

input[type="search"].success {
    &:extend(input[type="text"].success);
}


/* topdoc
    name: Single-line email input
    family: cf-forms
    patterns:
    - name: Default single-line email input
      markup: |
        <input placeholder="placeholder email text" type="email" value="">
    - name: Focused state
      markup: |
        <input class="focus" placeholder="placeholder email text" type="email" value="">
    - name: Error state
      notes:
        - Please review the notes on form input error icons in the form icons section below.
      markup: |
        <input class="is-invalid" placeholder="placeholder email text" type="email" value="Invalid input">
        <span class="cf-form_input-icon cf-icon cf-icon-delete-round" role="alert"></span>
    - name: Success state
      notes:
        - Please review the notes on form input success icons in the form icons section below.
      markup: |
        <input class="success" placeholder="placeholder email text" type="email" value="Validated input">
        <span class="cf-form_input-icon cf-icon cf-icon-approved-round"></span>
    tags:
    - cf-forms
*/

/* NOTE: all input[type="email"] styles extend input[type="text"]. */

input[type="email"] {
    &:extend(input[type="text"]);
}

input[type="email"]:focus,
input[type="email"].focus {
    // Class included for static state examples
    &:extend(input[type="text"]:focus);
}

input[type="email"].error {
    &:extend(input[type="text"].error);
}

input[type="email"].success {
    &:extend(input[type="text"].success);
}


/* topdoc
    name: Single-line url input
    family: cf-forms
    patterns:
    - name: Default single-line url input
      markup: |
        <input placeholder="placeholder url text" type="url" value="">
    - name: Focused state
      markup: |
        <input class="focus" placeholder="placeholder url text" type="url" value="">
    - name: Error state
      notes:
        - Please review the notes on form input error icons in the form icons section below.
      markup: |
        <input class="is-invalid" placeholder="placeholder url text" type="url" value="Invalid input">
        <span class="cf-form_input-icon cf-icon cf-icon-delete-round" role="alert"></span>
    - name: Success state
      notes:
        - Please review the notes on form input success icons in the form icons section below.
      markup: |
        <input class="success" placeholder="placeholder url text" type="url" value="Validated input">
        <span class="cf-form_input-icon cf-icon cf-icon-approved-round"></span>
    tags:
    - cf-forms
*/

/* NOTE: all input[type="url"] styles extend input[type="text"]. */

input[type="url"] {
    &:extend(input[type="text"]);
}

input[type="url"]:focus,
input[type="url"].focus {
    // Class included for static state examples
    &:extend(input[type="text"]:focus);
}

input[type="url"].error {
    &:extend(input[type="text"].error);
}

input[type="url"].success {
    &:extend(input[type="text"].success);
}


/* topdoc
    name: Single-line tel input
    family: cf-forms
    patterns:
    - name: Default single-line tel input
      markup: |
        <input placeholder="placeholder tel text" type="tel" value="">
    - name: Focused state
      markup: |
        <input class="focus" placeholder="placeholder tel text" type="tel" value="">
    - name: Error state
      notes:
        - Please review the notes on form input error icons in the form icons section below.
      markup: |
        <input class="is-invalid" placeholder="placeholder tel text" type="tel" value="Invalid input">
        <span class="cf-form_input-icon cf-icon cf-icon-delete-round" role="alert"></span>
    - name: Success state
      notes:
        - Please review the notes on form input success icons in the form icons section below.
      markup: |
        <input class="success" placeholder="placeholder tel text" type="tel" value="Validated input">
        <span class="cf-form_input-icon cf-icon cf-icon-approved-round"></span>
    tags:
    - cf-forms
*/

/* NOTE: all input[type="tel"] styles extend input[type="text"]. */

input[type="tel"] {
    &:extend(input[type="text"]);
}

input[type="tel"]:focus,
input[type="tel"].focus {
    // Class included for static state examples
    &:extend(input[type="text"]:focus);
}

input[type="tel"].error {
    &:extend(input[type="text"].error);
}

input[type="tel"].success {
    &:extend(input[type="text"].success);
}


/* topdoc
    name: Single-line number input
    family: cf-forms
    patterns:
    - name: Default single-line number input
      markup: |
        <input placeholder="placeholder number text" type="number" value="">
    - name: Focused state
      markup: |
        <input class="focus" placeholder="placeholder number text" type="number" value="">
    - name: Error state
      notes:
        - Please review the notes on form input error icons in the form icons section below.
      markup: |
        <input class="is-invalid" placeholder="placeholder number text" type="number" value="Invalid input">
        <span class="cf-form_input-icon cf-icon cf-icon-delete-round" role="alert"></span>
    - name: Success state
      notes:
        - Please review the notes on form input success icons in the form icons section below.
      markup: |
        <input class="success" placeholder="placeholder number text" type="number" value="Validated input">
        <span class="cf-form_input-icon cf-icon cf-icon-approved-round"></span>
    tags:
    - cf-forms
*/

/* NOTE: all input[type="number"] styles extend input[type="text"]. */

input[type="number"] {
    &:extend(input[type="text"]);
}

input[type="number"]:focus,
input[type="number"].focus {
    // Class included for static state examples
    &:extend(input[type="text"]:focus);
}

input[type="number"].error {
    &:extend(input[type="text"].error);
}

input[type="number"].success {
    &:extend(input[type="text"].success);
}


/* topdoc
    name: Multiline textarea
    family: cf-forms
    patterns:
    - name: Default multi-line text box
      markup: |
        <textarea>Example entry</textarea>
    - name: Focused multi-line text box
      markup: |
        <textarea class="focus">Example entry</textarea>
    - name: Multi-line text box in error state
      notes:
        - Please review the notes on form input error icons in the form icons section below.
      markup: |
        <textarea class="is-invalid">Invalid input</textarea>
        <span class="cf-form_input-icon cf-icon cf-icon-delete-round" role="alert"></span>
    - name: Multi-line text box in success state
      notes:
        - Please review the notes on form input success icons in the form icons section below.
      markup: |
        <textarea class="success">Validated input</textarea>
        <span class="cf-form_input-icon cf-icon cf-icon-approved-round"></span>
    tags:
    - cf-forms
*/

/* NOTE: all textarea styles extend input[type="text"]. */

textarea {
    &:extend(input[type="text"]);
    overflow: auto; // http://css-tricks.com/textarea-tricks/
}

textarea:focus,
textarea.focus {
    // Class included for static state examples
    &:extend(input[type="text"]:focus);
}

textarea.error {
    &:extend(input[type="text"].error);
}

textarea.success {
    &:extend(input[type="text"].success);
}


/* topdoc
    name: Form icons
    family: cf-forms
    patterns:
    - name: Form input icons
      notes:
        - "Form input icons add small positioning tweaks to Cappital Framework
          icons."
        - "They are meant to be positioned after a form input."
      markup: |
        <input type="text" value="">
        <span class="cf-form_input-icon cf-icon cf-icon-email"></span>
    - name: Form input error icon
      notes:
        - |
          The icon must be placed directly after the form input in the markup
          and the input must have the class of "error".
        - 'Use the alert role to mark invalid fields: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_alert_role'
      markup: |
        <input class="is-invalid" placeholder="placeholder search text" type="search" value="Invalid input">
        <span class="cf-form_input-icon cf-icon cf-icon-delete-round" role="alert"></span>
    - name: Form input success icon
      notes:
        - |
          The icon must be placed directly after the form input in the markup
          and the input must have the class of "success".
      markup: |
        <input class="success" placeholder="placeholder search text" type="search" value="Validated input">
        <span class="cf-form_input-icon cf-icon cf-icon-approved-round"></span>
    tags:
    - cf-forms
*/

@cf-forms_input-icon-class: cf-form_input-icon;

.@{cf-forms_input-icon-class} {
    @font-size: 20px;

    position: relative;
    top: unit( 3px / @font-size, em);
    margin-left: unit( 4px / @font-size, em);
    font-size: unit( @font-size / @base-font-size-px, em );
}

.error + .@{cf-forms_input-icon-class} {
    color: @redorange;
}

.success + .@{cf-forms_input-icon-class} {
    color: @green;
}


/* topdoc
  name: EOF
  eof: true
*/
